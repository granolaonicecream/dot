{-# LANGUAGE BlockArguments, ImportQualifiedPost #-}

import Data.Foldable
import Data.Map.Strict qualified as Map
import XMonad
import XMonad.StackSet
import XMonad.Actions.Navigation2D
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.EwmhDesktops
import XMonad.Hooks.StatusBar
import XMonad.Layout.BinarySpacePartition
import XMonad.Layout.NoBorders
import XMonad.Layout.ToggleLayouts
import XMonad.Util.EZConfig
import XMonad.Util.Types

main = xmonad . ewmhFullscreen . ewmh . withEasySB (statusBarProp "xmobar" (return pp)) defToggleStrutsKey .
  navigation2DP def
                ("<Up>", "<Left>", "<Down>", "<Right>")
                [("M-", windowGo), ("M-S-", windowSwap)]
                False
  $ def { normalBorderColor = "#928374"
        , focusedBorderColor = "#458588"
        , terminal = "alacritty"
        , layoutHook = smartBorders (toggleLayouts Full emptyBSP)
        , modMask = mod4Mask
        , borderWidth = 5
        , logHook = myLogHook
        } `additionalKeysP`
        [ ("M-S-p", spawn "rofi -show drun")
        , ("M-S-.", sendMessage (SplitShift Next))
        , ("M-S-,", sendMessage (SplitShift Prev))
        , ("M-f", sendMessage ToggleLayout)
        , ("M-r", sendMessage Rotate)
        , ("M-s", sendMessage Swap)
        , ("M-p", sendMessage FocusParent)
        ]
 where
  pp = def { ppCurrent = xmobarColor "#fabd2f" ""
           , ppTitle = id
           }
  myLogHook = withDisplay \dpy -> withWindowSet \ws -> do
    a <- getAtom "_PICOM_SHADOW"
    for_ (integrate' . stack . workspace . current $ ws) \w -> liftIO $ changeProperty8 dpy w a cARDINAL propModeReplace [0]
    for_ (Map.keys . floating $ ws) \w -> liftIO $ changeProperty8 dpy w a cARDINAL propModeReplace [1]
